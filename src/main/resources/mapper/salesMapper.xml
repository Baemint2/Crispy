<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mcp.crispy.sales.mapper.SalesMapper">
	
	<!-- 구 별 평균 매출 조회 결과-->
	<resultMap type="SalesDto" id="SalesMapByGuAvg">
		   <id property="salNo" column="SAL_NO" />
       <result property="frnGu" column="FRN_GU"/>
       <result property="totalAvgSales" column="TOTAL_AVG_SALES"/>
	</resultMap>

    <!-- 매출 INSERT -->
    <insert id="insertSales" parameterType="SalesDto">
        INSERT INTO SALES_T(
                    SAL_NO
                  , SAL_DT
                  , SAL_PRICE
                  , CREATE_DT
                  , CREATOR
                  , MODIFY_DT
                  , MODIFIER
                  , FRN_NO
        ) VALUES (
                   SALES_SEQ.NEXTVAL
                 , #{salDt}
                 , #{salPrice}
                 , CURRENT_TIMESTAMP
                 , #{creator}
                 , CURRENT_TIMESTAMP
                 , #{modifier}
                 , #{frnNo})
    </insert>

    <!-- 등록된 직원 가맹점의 매출 목록-->
    <select id="getSalesList" parameterType="map" resultType="SalesDto">
            SELECT S.SAL_DT
                 , SUM(S.SAL_PRICE) AS SAL_PRICE
              FROM SALES_T S
        INNER JOIN FRANCHISE_T F
                ON S.FRN_NO = F.FRN_NO
             WHERE F.FRN_NO = #{frnNo}
          GROUP BY S.SAL_DT
    </select>

    <!-- 일별 매출 SELECT-->
    <select id="findDailySales" parameterType="map" resultType="SalesDto">
            SELECT TO_CHAR(TRUNC(TO_DATE(SAL_DT, 'yyyy-mm-dd')), 'dd') AS SAL_DD
                 , SUM(S.SAL_PRICE) AS SAL_PRICE
              FROM SALES_T S
        INNER JOIN FRANCHISE_T F
                ON S.FRN_NO = F.FRN_NO
             WHERE F.FRN_NO = #{frnNo}
          GROUP BY TO_CHAR(TRUNC(TO_DATE(SAL_DT, 'yyyy-mm-dd')), 'dd')
    </select>

    <!-- 달별 매출 SELECT -->
    <select id="findMonthlySales" parameterType="map" resultType="SalesDto">
            SELECT TO_CHAR(TRUNC(TO_DATE(SAL_DT, 'yyyy-mm-dd')), 'mm') AS SAL_MN
                 , SUM(S.SAL_PRICE) AS SAL_PRICE
              FROM SALES_T S
        INNER JOIN FRANCHISE_T F
                ON S.FRN_NO = F.FRN_NO
             WHERE F.FRN_NO = #{frnNo}
          GROUP BY TO_CHAR(TRUNC(TO_DATE(SAL_DT, 'yyyy-mm-dd')), 'mm')
    </select>

    <!-- 년별 매출 SELECT-->
    <select id="findYearlySales" parameterType="map" resultType="SalesDto">
            SELECT TO_CHAR(TRUNC(TO_DATE(SAL_DT, 'yyyy-mm-dd')), 'yyyy') AS SAL_YR
                 , SUM(S.SAL_PRICE) AS SAL_PRICE
              FROM SALES_T S
        INNER JOIN FRANCHISE_T F ON S.FRN_NO = F.FRN_NO
             WHERE F.FRN_NO = #{frnNo}
          GROUP BY TO_CHAR(TRUNC(TO_DATE(SAL_DT, 'yyyy-mm-dd')), 'yyyy')

    </select>

    <!-- 기간별 평균 매출 -->
    <select id="findAvgSales">
        SELECT AVG(SAL_PRICE) AS SAL_PRICE
          FROM (
                SELECT SAL_PRICE
                  FROM SALES_T
                 WHERE SAL_DT BETWEEN #{startDate} AND #{endDate}
               ) AS SAL_DT
    </select>

    <!-- 구별 매출 조회 : 카테고리, 가맹점 테이블 -->
    <select id="findGuAvgSales">
		    SELECT F.FRN_GU
      		     , SUM(S.SAL_PRICE) / COUNT(DISTINCT F.FRN_NO) AS TOTAL_AVG_SALES
	    	  FROM SALES_T S
		INNER JOIN FRANCHISE_T F
		        ON S.FRN_NO = F.FRN_NO
		     WHERE EXTRACT(MONTH FROM S.SAL_DT) = #{month}
		  GROUP BY F.FRN_GU
		  ORDER BY F.FRN_GU ASC
    </select>

    <!-- 이달의 매장 순위 -->
    <select id="findSalesRenk">

    </select>

    <select id="salesDetail" parameterType="map" resultType="SalesDto">
            SELECT S.SAL_NO
                 , S.SAL_DT
                 , S.SAL_PRICE
                 , F.FRN_NO
                 , F.FRN_NAME
              FROM SALES_T S
        INNER JOIN FRANCHISE_T F
                ON S.FRN_NO = F.FRN_NO
             WHERE S.SAL_NO = #{salNo}
    </select>
</mapper>