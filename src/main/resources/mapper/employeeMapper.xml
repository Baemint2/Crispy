<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mcp.crispy.employee.mapper.EmployeeMapper">

    <resultMap id="EmployeeDtoMap" type="EmployeeDto">
        <id property="empNo" column="EMP_NO"/>
        <result property="empId" column="EMP_ID"/>
        <result property="empPw" column="EMP_PW"/>
        <result property="empName" column="EMP_NAME"/>
        <result property="empEmail" column="EMP_EMAIL"/>
        <result property="empPhone" column="EMP_PHONE"/>
        <result property="empAppr" column="EMP_APPR"/>
        <result property="empZip" column="EMP_ZIP"/>
        <result property="empStreet" column="EMP_STREET"/>
        <result property="empDetail" column="EMP_DETAIL"/>
        <result property="empProfile" column="EMP_PROFILE"/>
        <result property="empSign" column="EMP_SIGN"/>
        <result property="empAnnual" column="EMP_ANNUAL"/>
        <result property="empStat" column="EMP_STAT" typeHandler="com.mcp.crispy.common.typehandler.EmpStatusTypeHandler"/>
        <result property="empInDt" column="EMP_IN_DT"/>
        <result property="empOutDt" column="EMP_OUT_DT"/>
        <result property="createDt" column="CREATE_DT"/>
        <result property="modifyDt" column="MODIFY_DT"/>
        <result property="posNo" column="POS_NO" typeHandler="com.mcp.crispy.common.typehandler.PositionTypeHandler"/>
        <result property="frnNo" column="FRN_NO"/>
    </resultMap>

    <!-- 직원 등록 -->
    <insert id="insertEmployee" parameterType="EmployeeRegisterDto">
        <selectKey keyProperty="empNo" resultType="int" order="BEFORE">
            SELECT EMPLOYEE_SEQ.NEXTVAL
            FROM DUAL
        </selectKey>
        INSERT INTO EMPLOYEE_T (
              EMP_NO
            , EMP_ID
            , EMP_PW
            , EMP_NAME
            , EMP_EMAIL
            , EMP_PHONE
            , EMP_PROFILE
            , EMP_IN_DT
            , EMP_STAT
            , FRN_NO
            , POS_NO
        ) VALUES (
              #{empNo}
            , #{empId}
            , #{empPw}
            , #{empName}
            , #{empEmail}
            , #{empPhone}
            , #{empProfile}
            , #{empInDt}
            , #{empStat, typeHandler=com.mcp.crispy.common.typehandler.EmpStatusTypeHandler}
            , #{frnNo}
            , #{posNo, typeHandler=com.mcp.crispy.common.typehandler.PositionTypeHandler}
        )
    </insert>

    <!-- empId로 유저 정보 찾기 -->
    <select id="findByUsername" resultMap="EmployeeDtoMap">
            SELECT E.EMP_NO, E.EMP_PW, E.EMP_ID, E.EMP_NAME, E.EMP_PHONE
                 , E.EMP_ZIP, E.EMP_STREET, E.EMP_DETAIL, E.EMP_SIGN
                 , E.EMP_EMAIL, E.EMP_STAT, E.FRN_NO, E.EMP_PROFILE
                 , F.FRN_NAME
                 , P.POS_NAME, P.POS_NO
            FROM EMPLOYEE_T E
       LEFT JOIN FRANCHISE_T F
              ON E.FRN_NO = F.FRN_NO
      INNER JOIN POSITION_T P
              ON E.POS_NO = P.POS_NO
           WHERE 1 = 1
             AND E.EMP_ID = #{empId}
    </select>

    <!-- 현재 로그인한 유저 빼고 검색-->
    <select id="findAllExceptCurrentUser" parameterType="int" resultType="EmployeeDto">
            SELECT E.EMP_NO, E.EMP_NAME, E.EMP_PHONE, E.EMP_EMAIL
                 , E.EMP_PROFILE, P.POS_NAME, F.FRN_NAME
            FROM EMPLOYEE_T E
       LEFT JOIN POSITION_T P
              ON E.POS_NO = P.POS_NO
       LEFT JOIN FRANCHISE_T F
              ON E.FRN_NO = F.FRN_NO
           WHERE 1 = 1
             AND E.EMP_NO != #{currentEmpNo}
        ORDER BY E.EMP_NAME, P.POS_NAME DESC
    </select>

    <!-- empNo로 해당 사원의 정보 찾기 -->
    <select id="findByEmployeeDetailsByEmpNo" parameterType="EmployeeDto">
            SELECT E.EMP_NO, E.EMP_ID, E.EMP_NAME, E.EMP_PHONE, E.EMP_ZIP, E.EMP_STREET
                 , E.EMP_DETAIL, E.EMP_PROFILE, E.EMP_EMAIL, E.EMP_STAT
                 , F.FRN_NO, F.FRN_NAME
                 , P.POS_NAME, P.POS_NO
            FROM EMPLOYEE_T E
       LEFT JOIN FRANCHISE_T F
              ON E.FRN_NO = F.FRN_NO
      INNER JOIN POSITION_T P
              ON E.POS_NO = P.POS_NO
           WHERE 1 = 1
             AND E.EMP_NO = #{empNo}
    </select>

    <!-- 가맹점 번호로 가맹점에 속해있는 직원 정보 가져오기 -->
    <select id="findEmployeeByFranchise" parameterType="int" resultType="EmployeeRequestDto">
            SELECT E.EMP_NO, E.EMP_ID, E.EMP_NAME, E.EMP_PHONE
                 , E.EMP_STAT, F.FRN_NAME, P.POS_NAME
            FROM EMPLOYEE_T E
       LEFT JOIN FRANCHISE_T F
              ON E.FRN_NO = F.FRN_NO
      INNER JOIN POSITION_T P
              ON E.POS_NO = P.POS_NO
           WHERE 1 = 1
             AND E.FRN_NO = #{frnNo}
             AND E.POS_NO != 0
        ORDER BY E.EMP_NO
    </select>

    <!-- 이메일로 찾기 -->
    <select id="findByEmpEmail"
            resultType="FindEmployeeDto">
            SELECT E.EMP_NO, E.EMP_ID, E.EMP_NAME, E.EMP_EMAIL
            FROM EMPLOYEE_T E
           WHERE 1 = 1
             AND EMP_EMAIL = #{empEmail}
             AND EMP_NAME = #{empName}
    </select>

    <!-- 비밀번호 수정 -->
    <update id="updateEmpPw">
            UPDATE EMPLOYEE_T E
            SET E.EMP_PW = #{empPw},
                E.MODIFIER = #{modifier},
                E.MODIFY_DT = CURRENT_DATE
            WHERE E.EMP_ID = #{empId}
    </update>

    <!-- 이메일과 해당 사원의 이메일이 일치하는 정보 가져오기 -->
    <select id="findByEmpNameAndEmpEmail"
            parameterType="FindEmployeeDto">
            SELECT E.EMP_ID, E.EMP_NAME, E.EMP_EMAIL, E.CREATE_DT
            FROM EMPLOYEE_T E
           WHERE 1 = 1
             AND E.EMP_NAME = #{empName}
             AND E.EMP_EMAIL = #{empEmail}
    </select>

    <!-- 닉네임, 이메일, 아이디에 해당하는 직원의 정보 찾기 -->
    <select id="findByEmpNameAndEmpEmailAndEmpId"
            parameterType="FindEmployeeDto">
            SELECT E.EMP_ID, E.EMP_NAME, E.EMP_EMAIL, E.CREATE_DT
            FROM EMPLOYEE_T E
           WHERE 1 = 1
             AND EMP_NAME = #{empName}
             AND EMP_EMAIL = #{empEmail}
             AND EMP_ID = #{empId}
    </select>

    <!-- empNo에 맞는 직원 찾기 -->
    <select id="findEmployeeByEmpNo"
            parameterType="EmployeeDto">
            SELECT E.EMP_NO, E.EMP_ID, E.EMP_NAME, E.EMP_PHONE
                 , E.EMP_STAT, E.EMP_ZIP, E.EMP_STREET, E.EMP_DETAIL
                 , F.FRN_NAME
                 , P.POS_NAME
            FROM EMPLOYEE_T E
       LEFT JOIN FRANCHISE_T F
              ON E.FRN_NO = F.FRN_NO
      INNER JOIN POSITION_T P
              ON E.POS_NO = P.POS_NO
           WHERE 1 = 1
             AND E.EMP_NO = #{empNo}
    </select>

    <!-- 번호에 맞는 직원 호출 -->
    <select id="countByEmpNo"
            parameterType="int" resultType="int">
            SELECT COUNT(*)
            FROM EMPLOYEE_T E
           WHERE 1 = 1
             AND E.EMP_NO = #{empNo}
    </select>

    <!-- 주소 수정 -->
    <update id="updateAddress"
            parameterType="EmployeeUpdateDto">
            UPDATE EMPLOYEE_T E
            SET E.EMP_ZIP = #{updateDto.empZip},
                E.EMP_STREET = #{updateDto.empStreet},
                E.EMP_DETAIL = #{updateDto.empDetail},
                E.MODIFY_DT = CURRENT_DATE,
                E.MODIFIER = #{modifier}
            WHERE 1 = 1
              AND E.EMP_NO = #{updateDto.empNo}
    </update>

    <!-- 전자서명 수정 -->
    <update id="updateEmpSign"
            parameterType="EmployeeUpdateDto">
            UPDATE EMPLOYEE_T E
            SET E.EMP_SIGN = #{empSign},
                E.MODIFY_DT = CURRENT_DATE,
                E.MODIFIER = #{empNo}
            WHERE 1 = 1
              AND E.EMP_NO = #{empNo}
    </update>

    <!-- 프로필 수정 -->
    <update id="updateEmpProfile"
            parameterType="EmployeeUpdateDto">
            UPDATE EMPLOYEE_T E
            SET E.EMP_PROFILE = #{empProfile},
                E.MODIFY_DT = CURRENT_DATE,
                E.MODIFIER = #{modifier}
            WHERE 1 = 1
              AND E.EMP_NO = #{empNo}
    </update>

    <!-- 전화번호 수정 -->
    <update id="updateEmpPhone"
            parameterType="EmployeeUpdateDto">
            UPDATE EMPLOYEE_T E
            SET E.EMP_PHONE = #{empPhone},
                E.MODIFY_DT = CURRENT_DATE,
                E.MODIFIER = #{modifier}
            WHERE 1 = 1
              AND EMP_NO = #{empNo}
    </update>

    <!-- 이름 수정 -->
    <update id="updateEmpName"
            parameterType="EmployeeUpdateDto">
            UPDATE EMPLOYEE_T E
            SET E.EMP_NAME = #{empName},
                E.MODIFY_DT = CURRENT_DATE,
                E.MODIFIER = #{modifier}
            WHERE 1 = 1
              AND EMP_NO = #{empNo}
    </update>

    <!-- 직책 수정 -->
    <update id="updatePosNo"
            parameterType="EmployeeUpdateDto">
            UPDATE EMPLOYEE_T
              SET POS_NO = #{posNo},
                  MODIFY_DT = CURRENT_DATE,
                  MODIFIER = #{modifier}
             WHERE 1 = 1
               AND EMP_NO = #{empNo}
    </update>

    <!-- 재직 상태 수정  -->
    <update id="updateEmpStat"
            parameterType="EmployeeUpdateDto">
            UPDATE EMPLOYEE_T
            SET EMP_STAT = #{empStat},
                MODIFY_DT = CURRENT_DATE,
                MODIFIER = #{modifier}
            WHERE 1 = 1
              AND EMP_NO = #{empNo}
    </update>

    <!-- 직원 검색 -->
    <select id="searchEmployees" parameterType="EmployeeDto"
            resultType="EmployeeDto">
            SELECT E.EMP_NO, E.EMP_NAME, E.EMP_PROFILE
                 , P.POS_NAME
                 , F.FRN_NAME
            FROM EMPLOYEE_T E
       LEFT JOIN POSITION_T P
              ON E.POS_NO = P.POS_NO
       LEFT JOIN FRANCHISE_T F
              ON E.FRN_NO = F.FRN_NO
            WHERE 1 = 1
            <if test="empName != null and empName != ''">
              AND E.EMP_NAME
             LIKE '%' || #{empName} || '%'
            </if>
              <!-- 로그인한 사용자 제외 -->
            <if test="currentEmpNo != null">
                AND E.EMP_NO != #{currentEmpNo}
            </if>
    </select>

    <!-- 직원 초대 -->
    <select id="inviteEmployees" resultType="EmployeeDto">
            SELECT E.EMP_NO, E.EMP_NAME, E.EMP_PHONE,
                   E.EMP_EMAIL, E.EMP_PROFILE
                 , P.POS_NAME
                 , F.FRN_NAME
            FROM EMPLOYEE_T E
      INNER JOIN POSITION_T P
              ON E.POS_NO = P.POS_NO
      INNER JOIN FRANCHISE_T F
              ON E.FRN_NO = F.FRN_NO
       LEFT JOIN CR_EMP_T CE
              ON CE.EMP_NO = E.EMP_NO
             AND CE.CHAT_ROOM_NO = #{chatRoomNo}
             AND ENTRY_STAT = 0
           WHERE 1 = 1
             AND CE.EMP_NO IS NULL
    </select>

    <!-- 폼 정보 수정 -->
    <update id="updateFormEmployee" parameterType="map">
            UPDATE EMPLOYEE_T E
            <set>
                <if test="updateDto.empZip != null">
                    E.EMP_ZIP = #{updateDto.empZip},
                </if>
                <if test="updateDto.empStreet != null">
                    E.EMP_STREET = #{updateDto.empStreet},
                </if>
                <if test="updateDto.empDetail != null">
                    E.EMP_DETAIL = #{updateDto.empDetail},
                </if>
                <if test="updateDto.empName != null">
                    E.EMP_NAME = #{updateDto.empName},
                </if>
                <if test="updateDto.empPhone != null">
                    E.EMP_PHONE = #{updateDto.empPhone},
                </if>
                <if test="updateDto.empEmail != null">
                    E.EMP_EMAIL = #{updateDto.empEmail},
                </if>
                <if test="updateDto.empStat != null">
                    E.EMP_STAT = #{updateDto.empStat, typeHandler=com.mcp.crispy.common.typehandler.EmpStatusTypeHandler},
                </if>
                <if test="updateDto.posNo != null">
                    E.POS_NO = #{updateDto.posNo, typeHandler=com.mcp.crispy.common.typehandler.PositionTypeHandler},
                </if>
                E.MODIFY_DT = CURRENT_DATE,
                E.MODIFIER = #{modifier}
            </set>
            WHERE 1 = 1
              AND E.EMP_NO = #{updateDto.empNo}
    </update>
</mapper>