<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mcp.crispy.board.mapper.BoardMapper">
    <resultMap type="BoardDto" id="BoardMap">
        <id property="boardNo" column="BOARD_NO" />
        <result property="boardCtNo" column="BOARD_CT_NO" />
        <result property="boardTitle" column="BOARD_TITLE" />
        <result property="boardContent" column="BOARD_CONTENT" />
        <result property="boardHit" column="BOARD_HIT" />
        <result property="createDt" column="CREATE_DT" />
        <result property="creator" column="CREATOR" />
        <result property="modifyDt" column="MODIFY_DT" />
        <result property="modifier" column="MODIFIER" />
        <association property="employee" javaType="EmployeeDto">
            <id property="empNo" column="EMP_NO" />
            <result property="empId" column="EMP_ID" />
            <result property="empName" column="EMP_NAME" />
            <result property="empProfile" column="EMP_PROFILE" />
        </association>
    </resultMap>

    <!--    &lt;!&ndash; 자유게시판 LIST &ndash;&gt;-->
    <!--    <select id="getFreeBoardList">-->
    <!--        SELECT BOARD_NO-->
    <!--             , BOARD_TITLE-->
    <!--             , BOARD_CONTENT-->
    <!--             , BOARD_HIT-->
    <!--             , CREATE_DT-->
    <!--        FROM BOARD_T-->
    <!--        WHERE BOARD_CT_NO = 1-->
    <!--    </select>-->
    <sql id="search">
        <if test="search != null and search != ''">
            AND (B.BOARD_TITLE LIKE '%' || #{search} || '%'
            OR B.BOARD_CONTENT LIKE '%' || #{search} || '%')
        </if>
    </sql>

    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM BOARD_T B
        INNER JOIN EMPLOYEE_T E
        ON B.EMP_NO = E.EMP_NO
        WHERE BOARD_CT_NO = 1
        <include refid="search"></include>
    </select>

    <select id="getFreeBoardList" resultMap="BoardMap" parameterType="Map">
        SELECT *
        FROM (
        SELECT ROW_NUMBER() OVER(ORDER BY B.BOARD_NO DESC) AS RN
        , B.BOARD_NO
        , B.BOARD_TITLE
        , B.BOARD_CONTENT
        , B.BOARD_HIT
        , B.CREATE_DT
        FROM BOARD_T B
        INNER JOIN EMPLOYEE_T E ON B.EMP_NO = E.EMP_NO
        WHERE BOARD_CT_NO = 1
        <include refid="search"></include>
        ) a
        WHERE RN BETWEEN #{begin} AND #{end}
    </select>



    <!-- INSERT 수행 이전에 파라미터 BoardDto의 boardNo 속성(필드)에 BOARD_SEQ.NEXTVAL 값을 저장한다. -->
    <insert id="insertBoard"
            parameterType="BoardDto">
        <selectKey keyProperty="boardNo" order="BEFORE" resultType="int">
            SELECT BOARD_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO BOARD_T (
        BOARD_NO
        , BOARD_CT_NO
        , BOARD_TITLE
        , BOARD_CONTENT
        , EMP_NO
        , CREATE_DT
        , CREATOR
        ) VALUES (
        #{boardNo}
        , #{boardCtNo}
        , #{boardTitle}
        , #{boardContent}
        , #{empNo}
        , CURRENT_TIMESTAMP
        ,#{creator}
        )
    </insert>

    <!-- 파일업로드 INSERT -->
    <insert id="insertBoardFile" parameterType="BoardFileDto">
        INSERT INTO BOARD_FILE_T (
            BOARD_FILE_NO,
            BOARD_PATH,
            BOARD_RENAME,
            BOARD_ORIGIN,
            BOARD_NO
        ) VALUES (
                     BOARD_FILE_SEQ.NEXTVAL,
                     #{boardPath},
                     #{boardRename},
                     #{boardOrigin},
                     #{boardNo}
                 )
    </insert>

    <select id="getBoardCount">
        SELECT COUNT(*)
        FROM BOARD_T
    </select>

    <!--    <select id="getBoardList"-->
    <!--            parameterType="Map"-->
    <!--            resultMap="BoardMap">-->
    <!--        SELECT-->
    <!--            BOARD_NO, BOARD_CT_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_HIT, CREATE_DT, MODIFY_DT, EMP_NO, CREATOR, MODIFIER-->
    <!--        FROM (-->
    <!--                 SELECT-->
    <!--                     ROW_NUMBER() OVER (ORDER BY BOARD_NO ${sort}) AS RN,-->
    <!--                         BOARD_NO, BOARD_CT_NO, BOARD_TITLE, BOARD_CONTENT, BOARD_HIT, CREATE_DT, MODIFY_DT, EMP_NO, CREATOR, MODIFIER-->
    <!--                 FROM-->
    <!--                     BOARD_T-->
    <!--             )-->
    <!--        WHERE RN BETWEEN #{begin} AND #{end}-->
    <!--    </select>-->

    <select id="getBoardByNo" resultMap="BoardMap">
        SELECT B.BOARD_NO, B.BOARD_CT_NO, B.BOARD_TITLE, B.BOARD_CONTENT, B.BOARD_HIT, B.CREATE_DT, B.MODIFY_DT, E.EMP_NO, F.BOARD_ORIGIN
        FROM BOARD_T B
                 left JOIN EMPLOYEE_T E ON E.EMP_NO = B.EMP_NO
                 left JOIN BOARD_FILE_T F ON B.BOARD_NO = F.BOARD_NO
        WHERE B.BOARD_NO = #{boardNo}
    </select>

    <select id="getBoardFileList"
            resultType="BoardFileDto">
        SELECT BOARD_FILE_NO, BOARD_PATH, BOARD_RENAME, BOARD_ORIGIN
        FROM BOARD_FILE_T
        WHERE BOARD_NO = #{boardNo}
    </select>

    <select id="getBoardFileByNo"
            resultType="BoardFileDto">
        SELECT BOARD_FILE_NO, BOARD_PATH, BOARD_RENAME, BOARD_ORIGIN
        FROM BOARD_FILE_T
        WHERE BOARD_FILE_NO = #{boardFileNo}
    </select>

    <!--    <update id="updateDownloadCount">-->
    <!--        UPDATE BOARD_FILE_T-->
    <!--        SET DOWNLOAD_COUNT = DOWNLOAD_COUNT + 1-->
    <!--        WHERE BOARD_FILE_NO = #{boardFileNo}-->
    <!--    </update>-->

    <update id="updateBoard"
            parameterType="BoardDto">
        UPDATE BOARD_T
        SET BOARD_TITLE = #{boardTitle}
          , BOARD_CONTENT = #{boardContent}
        WHERE BOARD_NO = #{boardNo}


    </update>
    <update id="updateBoardFile" parameterType="BoardFileDto">
        UPDATE BOARD_FILE_T
        SET BOARD_ORIGIN = #{boardOrigin}
          , BOARD_RENAME = #{boardRename}
          , BOARD_PATH = #{boardPath}
        WHERE BOARD_NO = #{boardNo}
    </update>


    <delete id="deleteBoardFile">
        DELETE
        FROM BOARD_FILE_T
        WHERE BOARD_FILE_NO = #{boardFileNo}
    </delete>

    <delete id="deleteBoard">
        DELETE
        FROM BOARD_T
        WHERE BOARD_NO = #{boardNo}
    </delete>



    <update id="updateHit">
        UPDATE BOARD_T
        SET BOARD_HIT = BOARD_HIT + 1
        WHERE BOARD_NO = #{boardNo}
    </update>

    <insert id="insertLike">
        INSERT INTO BOARD_LIKE_T (
            BOARD_NO,
            EMP_NO
        ) VALUES (
          #{boardNo},
          #{empNo}
        )
    </insert>

    <select id="likeCheck">
        SELECT count(*)
          FROM BOARD_LIKE_T
          WHERE BOARD_NO = #{boardNo}
    </select>

    <delete id="">
        DELETE
        FROM BOARD_LIKE_T
        WHERE EMP_NO = #{empNo}
        AND BOARD_NO = #{boardNo}
    </delete>


</mapper>