<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mcp.crispy.stock.mapper.StockMapper">

    <!-- 전체 재고 항목 수 조회 -->
    <select id="getStockCount">
            SELECT COUNT(*)
              FROM STOCK_T S
        INNER JOIN STOCK_CATEGORY_T C
                ON S.STOCK_CT_NO = C.STOCK_CT_NO
        INNER JOIN INVENTORY_STAT_T I
                ON S.STOCK_NO = I.STOCK_NO
             WHERE 1=1
               AND I.FRN_NO = #{frnNo}
               <if test="stockCtNo != 0">
                   AND S.STOCK_CT_NO = #{stockCtNo}
               </if>
               <if test="stockNameSearch != null">
                   AND S.STOCK_NAME LIKE '%' || #{stockNameSearch} || '%'
               </if>
    </select>

    <!-- 재고 현황 조회 -->
    <select id="getStockList">
            SELECT ROW_NUMBER() OVER(
                   ORDER BY
                   <choose>
                       <when test="sortKey == 'isCount'">I.IS_COUNT</when>
                       <otherwise>S.STOCK_NAME</otherwise>
                   </choose>
                   <choose>
                       <when test="sortOrder == 'DESC'">DESC</when>
                       <otherwise>ASC</otherwise>
                   </choose>
                   ) RN
                 , S.STOCK_NO, S.STOCK_IMG, S.STOCK_NAME
                 , C.STOCK_CT_NAME
                 , I.IS_COUNT
              FROM STOCK_T S
        INNER JOIN STOCK_CATEGORY_T C
                ON S.STOCK_CT_NO = C.STOCK_CT_NO
        INNER JOIN INVENTORY_STAT_T I
                ON S.STOCK_NO = I.STOCK_NO
             WHERE 1=1
               AND I.FRN_NO = #{frnNo}
               <if test="stockCtNo != 0">
                   AND S.STOCK_CT_NO = #{stockCtNo}
               </if>
               <if test="stockNameSearch != null">
                   AND S.STOCK_NAME LIKE '%' || #{stockNameSearch} || '%'
               </if>
    </select>

    <!-- 재고 카테고리 목록 조회 -->
    <select id="getStockCtList">
            SELECT STOCK_CT_NO, STOCK_CT_NAME
              FROM STOCK_CATEGORY_T
          ORDER BY STOCK_CT_NAME ASC
    </select>

    <!-- 재고 상세 조회 -->
    <select id="getStockDetail">
            SELECT STOCK_NAME, STOCK_PRICE, STOCK_UNIT, STOCK_IMG, STOCK_DETAIL
              FROM STOCK_T
             WHERE 1=1
               AND STOCK_NO = #{stockNo}
    </select>

    <!-- 발주 재고 목록 조회 -->
    <select id="getSelectStock">
            SELECT C.STOCK_CT_NO, C.STOCK_CT_NAME
                 , S.STOCK_NO, S.STOCK_NAME, S.STOCK_PRICE, S.STOCK_UNIT
              FROM STOCK_T S
        INNER JOIN STOCK_CATEGORY_T C
                ON S.STOCK_CT_NO = C.STOCK_CT_NO
             WHERE 1=1
               AND STOCK_NO IN
               <foreach collection="list" item="stockNo" open="(" close=")" separator=", ">
                   #{stockNo}
               </foreach>
          ORDER BY S.STOCK_NAME ASC
    </select>

    <!-- 임시저장 값 존재 여부 확인 -->
    <select id="checkOrderTemp">
            SELECT COUNT(*)
              FROM STOCK_ORDER_TEMP_T
             WHERE 1=1
               AND EMP_NO = #{empNo}
    </select>

    <!-- 이전 임시저장 내용 삭제 -->
    <delete id="deleteOrderTemp">
            DELETE
              FROM STOCK_ORDER_TEMP_T
             WHERE EMP_NO = #{empNo}
    </delete>

    <!-- 발주 재고 임시저장 -->
    <insert id="insertOrderTemp" parameterType="ApprovalDto">
            INSERT INTO STOCK_ORDER_TEMP_T (
                        ORDER_TEMP_NO
                      , STOCK_NO
                      , STOCK_ORDER_COUNT
                      , STOCK_ORDER_COST
                      , EMP_NO
               ) SELECT STOCK_ORDER_TEMP_SEQ.NEXTVAL AS ORDER_TEMP_NO
                      , TEMP_T.*
                   FROM (
                   <foreach collection="stockOrderList" item="stockDto" separator="UNION ALL">
                        SELECT #{stockDto.stockNo} AS STOCK_NO
                             , #{stockDto.stockOrderCount} AS STOCK_ORDER_COUNT
                             , #{stockDto.stockOrderCost} AS STOCK_ORDER_COST
                             , #{empNo} AS EMP_NO
                          FROM DUAL
                   </foreach>
               ) TEMP_T
    </insert>

    <!-- 임시저장 내용 불러오기 -->
    <select id="getOrderTemp">
            SELECT T.ORDER_TEMP_NO, T.STOCK_NO, T.STOCK_ORDER_COUNT, T.STOCK_ORDER_COST
                 , S.STOCK_NAME, S.STOCK_PRICE, S.STOCK_UNIT
                 , C.STOCK_CT_NAME
              FROM STOCK_ORDER_TEMP_T T
        INNER JOIN STOCK_T S
                ON T.STOCK_NO = S.STOCK_NO
        INNER JOIN STOCK_CATEGORY_T C
                ON S.STOCK_CT_NO = C.STOCK_CT_NO
             WHERE 1=1
               AND T.EMP_NO = #{empNo}
    </select>
</mapper>
